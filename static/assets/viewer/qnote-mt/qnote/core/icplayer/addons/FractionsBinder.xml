<?xml version="1.0" encoding="UTF-8" standalone="no"?><addon xmlns="http://icplayer.com" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="FractionsBinder" xsi:schemaLocation="http://icplayer.com ../../tools/addon.xsd">
    <model>
        <property displayName="Fractions" name="Addons" nameLabel="FractionsBinder_property_addons" type="text"/>
        <property displayName="Correct Elements" name="CorrectElements" nameLabel="FractionsBinder_property_correct_elements" type="string"/>
    </model>
<css/><view/><preview>&lt;p&gt;FractionBinder&lt;/p&gt;&#13;
</preview><presenter>function AddonFractionsBinder_create(){&#13;
			&#13;
        var presenter = function () {};&#13;
&#13;
    presenter.configuration = {};&#13;
    presenter.loadFirstTime = true;&#13;
    presenter.isPreview = false;&#13;
&#13;
    function presenterLogic () {&#13;
        if(presenter.isPreview) return;&#13;
        presenter.addons = (presenter.model.Addons).split('\n');&#13;
        presenter.$view.css('visible', 'hidden');&#13;
        presenter.CorrectElements = presenter.model.CorrectElements;&#13;
        presenter.check = {};&#13;
        presenter.initialMarks = 0;&#13;
&#13;
        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                    if(presenter.getFraction(presenter.addons[i]) != null &amp;&amp; presenter.getFraction(presenter.addons[i]).allElements != undefined){&#13;
                        presenter.check[i] = true;&#13;
                        //presenter.initialMarks = presenter.initialMarks + presenter.getFraction(presenter.addons[i]).getInitialMarks();&#13;
                        presenter.initialMarks = presenter.initialMarks + presenter.getFraction(presenter.addons[i]).getCurrentNumber();&#13;
                    } else{&#13;
                        presenter.check[i] = false;&#13;
                   }&#13;
            }&#13;
&#13;
       presenter.loadFirstTime = false;&#13;
    };&#13;
&#13;
    presenter.setPlayerController = function (controller) {&#13;
        presenter.playerController = controller;&#13;
        presenter.eventBus = controller.getEventBus();&#13;
        presenter.eventBus.addEventListener('ValueChanged', this);&#13;
    };&#13;
&#13;
    presenter.getFraction = function (moduleID) {&#13;
        return presenter.playerController.getModule(moduleID);&#13;
    };&#13;
&#13;
    presenter.run = function (view, model) {&#13;
        presenter.$view = $(view);&#13;
        presenter.model = model;&#13;
        presenter.isPreview = false;&#13;
        //if(presenter.loadFirstTime) presenterLogic();&#13;
&#13;
            presenter.eventBus.addEventListener('ShowAnswers', this);&#13;
            presenter.eventBus.addEventListener('HideAnswers', this);&#13;
            presenter.eventBus.addEventListener('PageLoaded', this);&#13;
            //presenter.eventBus.addEventListener('AddonFractionsBinder', this);&#13;
&#13;
        //presenter.playerController.getEventBus().sendEvent('AddonFractionsBinder', {view,model,false});&#13;
    };&#13;
&#13;
&#13;
    presenter.triggerFrameChangeEvent = function(view,model,isPreview) {&#13;
        presenter.eventBus.sendEvent('AddonFractionsBinder', '');&#13;
&#13;
    };&#13;
&#13;
&#13;
    presenter.createPreview = function (view, model) {&#13;
        presenter.$view = $(view);&#13;
        presenter.model = model;&#13;
&#13;
        presenter.isPreview = true;&#13;
&#13;
        if(presenter.loadFirstTime) presenterLogic();&#13;
    };&#13;
&#13;
    presenter.getState = function () {&#13;
        var addons = presenter.addons;&#13;
        var check = presenter.check;&#13;
        var loadFirstTime = presenter.loadFirstTime;&#13;
        var initialMarks = presenter.initialMarks;&#13;
        var correct = presenter.CorrectElements;&#13;
        return JSON.stringify({&#13;
            correct: correct,&#13;
            check: check,&#13;
            addons: addons,&#13;
            loadFirstTime : loadFirstTime,&#13;
            initialMarks : initialMarks&#13;
        });&#13;
    };&#13;
&#13;
    presenter.setState = function (state) {&#13;
&#13;
        var parsedState = JSON.parse(state);&#13;
        presenter.check = parsedState.check;&#13;
        presenter.addons = parsedState.addons;&#13;
        presenter.initialMarks = parsedState.initialMarks;&#13;
        presenter.loadFirstTime = parsedState.loadFirstTime;&#13;
        presenter.CorrectElements = parsedState.correct;&#13;
        /*&#13;
        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                    if(presenter.check[i]){&#13;
                        presenter.getFraction(presenter.addons[i]).markAsEmpty();&#13;
                    }&#13;
            }&#13;
            */&#13;
    };&#13;
&#13;
    presenter.getMaxScore = function () {&#13;
        //if(presenter.loadFirstTime) presenterLogic();&#13;
        if(presenter.initialMarks == presenter.CorrectElements) {&#13;
            return 0;&#13;
        } else {&#13;
            return 1;&#13;
        }&#13;
    };&#13;
&#13;
&#13;
    presenter.getScore = function () {&#13;
        //if(presenter.loadFirstTime) presenterLogic();&#13;
&#13;
            if(presenter.initialMarks == presenter.CorrectElements) {&#13;
                return 0;&#13;
            } else{&#13;
                return presenter.currentMarks() == presenter.CorrectElements ? 1 : 0;&#13;
            }&#13;
        //} else {&#13;
          //  return 0;&#13;
        //}&#13;
    };&#13;
&#13;
    presenter.getErrorCount = function () {&#13;
        //if(!presenter.loadFirstTime){&#13;
            if(presenter.initialMarks == presenter.CorrectElements &amp;&amp; presenter.currentMarks() != presenter.CorrectElements) {&#13;
                return 1;&#13;
            }&#13;
&#13;
            if(presenter.initialMarks == presenter.currentMarks()) {&#13;
                return 0;&#13;
&#13;
            } else {&#13;
                return presenter.getMaxScore() - presenter.getScore();&#13;
&#13;
            }&#13;
        //} else{&#13;
        //    return 0;&#13;
        //}&#13;
    };&#13;
&#13;
&#13;
    presenter.setShowErrorsMode = function () {&#13;
        //if(presenter.loadFirstTime) presenterLogic();&#13;
         //fractions markAsCorrect || markAsWrong&#13;
        var current = presenter.currentMarks();&#13;
            if(presenter.initialMarks != current){&#13;
                 if(current == presenter.CorrectElements){&#13;
&#13;
                        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                            if(presenter.check[i]){&#13;
                                presenter.getFraction(presenter.addons[i]).markAsCorrect();&#13;
                                //presenter.getFraction(presenter.addons[i]).isErrorCheckMode(true);&#13;
                            }&#13;
                        }&#13;
&#13;
                 } else{&#13;
                        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                            if(presenter.check[i]){&#13;
                                presenter.getFraction(presenter.addons[i]).markAsWrong();&#13;
                               //presenter.getFraction(presenter.addons[i]).isErrorCheckMode(true);&#13;
                            }&#13;
                        }&#13;
                 }&#13;
&#13;
&#13;
            }&#13;
&#13;
&#13;
    };&#13;
&#13;
    presenter.currentMarks = function(){&#13;
        var marks = 0;&#13;
        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                if(presenter.check[i]){&#13;
                    marks = marks + presenter.getFraction(presenter.addons[i]).getCurrentNumberSA();&#13;
                }&#13;
        }&#13;
        return marks;&#13;
    };&#13;
&#13;
    presenter.setWorkMode = function () {&#13;
&#13;
            for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                    if(presenter.check[i]){&#13;
                        presenter.getFraction(presenter.addons[i]).markAsEmpty();&#13;
                        presenter.getFraction(presenter.addons[i]).isErrorCheckMode(false);&#13;
                    }&#13;
            }&#13;
&#13;
    };&#13;
&#13;
    presenter.showAnswers = function () {&#13;
        //if(presenter.loadFirstTime) presenterLogic();&#13;
        var elementsLeft = presenter.CorrectElements;&#13;
        var elements = 0;&#13;
        var showElements = 0;&#13;
            for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                    if(presenter.check[i]){&#13;
                        if(elementsLeft &gt; 0){&#13;
                            elements = presenter.getFraction(presenter.addons[i]).allElements();&#13;
                            showElements = elementsLeft - elements &gt; 0 ? elements : elementsLeft;&#13;
                            elementsLeft = elementsLeft - elements &gt; 0 ? elementsLeft - elements : 0;&#13;
                        } else {&#13;
                            showElements = 0;&#13;
                        }&#13;
                    //console.log(elementsLeft);&#13;
                    //console.log(showElements);&#13;
                        presenter.getFraction(presenter.addons[i]).markAsEmpty();&#13;
&#13;
                            presenter.getFraction(presenter.addons[i]).showElementsSA(showElements);&#13;
                                //presenter.getFraction(presenter.addons[i]).isErrorCheckMode(true);&#13;
&#13;
                        //presenter.getFraction(presenter.addons[i]).addShowAnswersClass();&#13;
                    }&#13;
            }&#13;
&#13;
        //presenter.CorrectElements&#13;
&#13;
        //fractions showElementsSA(ilosc_elementow)&#13;
    };&#13;
&#13;
    presenter.hideAnswers = function () {&#13;
&#13;
        for (var i = 0; i &lt; presenter.addons.length; i++) {&#13;
&#13;
                    if(presenter.check[i]){&#13;
                        presenter.getFraction(presenter.addons[i]).hideElementsSA();&#13;
                        //presenter.getFraction(presenter.addons[i]).isErrorCheckMode(false);&#13;
                        //presenter.getFraction(presenter.addons[i]).removeShowAnswersClass();&#13;
                    }&#13;
        }&#13;
&#13;
    };&#13;
&#13;
    presenter.reset = function () {&#13;
&#13;
        //fractions markAsEmpty&#13;
&#13;
    };&#13;
&#13;
    presenter.onEventReceived = function (eventName, eventData) {&#13;
&#13;
        if (eventName == "PageLoaded"){&#13;
            if(presenter.loadFirstTime) presenterLogic();&#13;
        }&#13;
&#13;
        if (eventName == "ShowAnswers") {&#13;
            presenter.showAnswers();&#13;
        }&#13;
&#13;
        if (eventName == "HideAnswers") {&#13;
            presenter.hideAnswers();&#13;
        }&#13;
&#13;
&#13;
    };&#13;
&#13;
    return presenter;&#13;
}&#13;
</presenter></addon>