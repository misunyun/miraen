<?xml version="1.0" encoding="UTF-8" standalone="no"?><addon id="Event_Listener">
	<model>
	</model>
<css>.event-listener-body,&#13;
.event-listener-header,&#13;
.event-listener-clear {&#13;
    text-align: center;&#13;
    font-weight: bold;&#13;
    border: 2px dashed #999999;&#13;
    padding: 3px;&#13;
    color: red;&#13;
    width: 100%;&#13;
}&#13;
&#13;
.event-listener-header {&#13;
    height: 5%;&#13;
}&#13;
&#13;
.event-listener-body {&#13;
    height: 85%;&#13;
    overflow: auto;&#13;
}&#13;
&#13;
.event-info {&#13;
    color: black;&#13;
    border-bottom: 1px dotted black;&#13;
    font-weight: normal;&#13;
}&#13;
&#13;
.event-name {&#13;
    color: red;&#13;
    font-weight: bold;&#13;
}&#13;
&#13;
.event-listener-clear {&#13;
    display: none;&#13;
    color: #00008b;&#13;
    border-top-width: 0;&#13;
    border-bottom-width: 0;&#13;
    cursor: pointer;&#13;
}&#13;
</css><view>&lt;div class="event-listener-header"&gt;No events intercepted&lt;/div&gt;&#13;
&lt;div class="event-listener-clear"&gt;Clear events log&lt;/div&gt;&#13;
&lt;div class="event-listener-body"&gt;&lt;/div&gt;&#13;
</view><preview>&lt;div class="event-listener-header"&gt;No events intercepted&lt;/div&gt;&#13;
&lt;div class="event-listener-clear"&gt;Clear events log&lt;/div&gt;&#13;
&lt;div class="event-listener-body"&gt;&lt;/div&gt;&#13;
</preview><presenter>function AddonEvent_Listener_create() {&#13;
    var presenter = function() {};&#13;
&#13;
    var playerController;&#13;
    var eventBus;&#13;
    var $view;&#13;
    var eventsCount = 0;&#13;
&#13;
    presenter.STANDARD_EVENTS = {&#13;
        'ValueChanged': 'vc',&#13;
        'Definition': 'de',&#13;
        'ItemSelected': 'is',&#13;
        'ItemConsumed': 'ic',&#13;
        'ItemReturned': 'ir',&#13;
        'PageLoaded': 'pl',&#13;
        'PageAllOK': 'pa',&#13;
        'ShowAnswers': 'sa',&#13;
        'HideAnswers': 'ha',&#13;
        'Done': 'do',&#13;
        'AllAttempted': 'aa',&#13;
        'NotAllAttempted': 'naa',&#13;
        'LimitedCheck': 'lc'&#13;
    };&#13;
&#13;
    presenter.setPlayerController = function(controller) {&#13;
        playerController = controller;&#13;
    };&#13;
&#13;
    function insertEventInfo(eventData, infoElement) {&#13;
        for (var eventDataName in eventData) {&#13;
            if (!eventData.hasOwnProperty(eventDataName)) continue;&#13;
&#13;
            var element = document.createElement('div');&#13;
            $(element).text(eventDataName + ': "' + eventData[eventDataName] + '"');&#13;
            $(infoElement).append(element);&#13;
        }&#13;
    }&#13;
&#13;
    function updateHeader() {&#13;
        $view.find('.event-listener-header').text('Intercepted ' + eventsCount + ' events');&#13;
    }&#13;
&#13;
    function createEventInfoElement(eventName) {&#13;
        var eventDateTime = new Date(),&#13;
            eventFormattedDate = eventDateTime.getHours() + ":" +&#13;
            eventDateTime.getMinutes() + ":" + eventDateTime.getSeconds(),&#13;
            eventInfo = document.createElement('div'),&#13;
            eventNameElement = document.createElement('div'),&#13;
            eventDate = document.createElement('div');&#13;
&#13;
        $(eventInfo).addClass('event-info');&#13;
        $(eventNameElement).addClass('event-name');&#13;
        $(eventNameElement).text("Received event of type " + eventName);&#13;
        $(eventInfo).append(eventNameElement);&#13;
&#13;
        $(eventDate).text("Date: " + eventFormattedDate);&#13;
        $(eventInfo).append(eventDate);&#13;
&#13;
        return eventInfo;&#13;
    }&#13;
&#13;
    presenter.onEventReceived = function(eventName, eventData) {&#13;
        var eventInfo = createEventInfoElement(eventName);&#13;
        insertEventInfo(eventData, eventInfo);&#13;
&#13;
        if (!eventsCount) {&#13;
            $view.find('.event-listener-body').html(eventInfo);&#13;
            $view.find('.event-listener-clear').show();&#13;
        } else {&#13;
            $view.find('.event-listener-body .event-info:first').before(eventInfo);&#13;
        }&#13;
&#13;
        eventsCount++;&#13;
        updateHeader();&#13;
    };&#13;
&#13;
    presenter.run = function(view){&#13;
        eventBus = playerController.getEventBus();&#13;
&#13;
        $.each(presenter.STANDARD_EVENTS, function(name, _) {&#13;
            eventBus.addEventListener(name, presenter);&#13;
        });&#13;
&#13;
        $view = $(view);&#13;
&#13;
        $view.find('.event-listener-clear').click(function () {&#13;
            eventsCount = 0;&#13;
            $view.find('.event-listener-header').text('No events intercepted');&#13;
            $view.find('.event-info').remove();&#13;
            $(this).hide();&#13;
        });&#13;
    };&#13;
&#13;
    return presenter;&#13;
}&#13;
</presenter></addon>